import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Set style with larger fonts
plt.rcParams.update({
    'font.size': 24,           # Default font size
    'axes.titlesize': 30,      # Title font size
    'axes.labelsize': 28,      # Axis label font size
    'xtick.labelsize': 24,     # X-axis tick font size
    'ytick.labelsize': 24,     # Y-axis tick font size
    'legend.fontsize': 15,     # Legend font size
    'figure.titlesize': 30     # Figure title size (if using suptitle)
})

plt.figure(figsize=(12, 8))  # Larger figure size

# Qubit range (1 to 80)
N = np.arange(1, 81)

# Scaling curves
classical = 2 ** (2 * N)  # Memory for state vector (O(2^2N))
trotter = 10 * N ** 3      # Gate count for Trotter (O(N^3 per step))
vqte = 0.1 * N ** 3       # Classical cost for VQTE (O(p^3), p ~ N^2)

# Plot with thicker lines
plt.plot(N, classical, label="Classical (Exact)", color="#ca8806", lw=4, linestyle="--")
plt.plot(N, trotter, label="Quantum Trotterization", color="#1d0be3", lw=4)
plt.plot(N, vqte, label="VarQTE (Hybrid)", color="#2ca02c", lw=4)

# Failure points (thicker annotations)
plt.axvline(30, color="gray", linestyle=":", alpha=0.6, lw=3)
plt.axvline(50, color="gray", linestyle=":", alpha=0.6, lw=3)
plt.text(32, 1e10, "Classical fails\n(~30 qubits)", ha="left", va="center", fontsize=24)
plt.text(52, 1e8, "VQTE struggles\n(~50 qubits)", ha="left", va="center", fontsize=24)

# Labels and limits
plt.yscale("log")
plt.xlabel("Number of Qubits (N)")
plt.ylabel("Relative Memory Cost")
plt.title("Scaling of Quantum Time Evolution Methods", pad=20)
plt.legend(loc="upper left", frameon=True, borderpad=1.2, handlelength=1.5)
plt.ylim(1, 1e18)
plt.xlim(1, 80)

# Remove grid if desired (uncomment below)
# plt.grid(False)

plt.tight_layout()
plt.savefig("scaling_comparison_large_font.png", dpi=300, bbox_inches="tight")
plt.show()
